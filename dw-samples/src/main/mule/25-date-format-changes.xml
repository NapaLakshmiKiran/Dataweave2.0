<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="25-date-format-changesFlow" doc:id="0a345fb7-34cc-4870-aee4-92ab8bd8fcf0" >
		<ee:transform doc:name="Transform Message" doc:id="9f6367e9-ef58-4a4d-aa25-61ad7730be3a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
[
  { "dateTime" : now() },
  { "era-G" : now() as String { format: "G"} },
  { "year-u" : now() as String {format: "u"} },
  { "year-uu" : now() as String {format: "uu"} },
  { "year-y" : now() as String { format: "y"} },
  { "year-yy" : now() as String { format: "yy"} },
  { "dayOfYear-D" : now() as String { format: "D"} },
  { "monthOfYear-MMMM": now() as String { format: "MMMM"} },
  { "monthOfYear-MMM": now() as String { format: "MMM"} },
  { "monthOfYear-MM": now() as String { format: "MM"} },
  { "monthOfYear-M": now() as String { format: "M"} },
  { "monthOfYear-LL": now() as String { format: "LL"} },
  { "monthOfYear-L": now() as String { format: "L"} },
  { "dayOfMonth-d" : now() as String {format: "d"} },
  { "quarterOfYear-qqq" : now() as String {format: "qqq"} },
  { "quarterOfYear-qq" : now() as String {format: "qq"} },
  { "quarterOfYear-q" : now() as String {format: "q"} },
  { "quarterOfYear-QQQQ" : now() as String {format: "QQQQ"} },
  { "quarterOfYear-QQQ" : now() as String {format: "QQQ"} },
  { "quarterOfYear-QQ" : now() as String {format: "QQ"} },
  { "quarterOfYear-Q" : now() as String {format: "Q"} },
  // Understand "Y" and "YY" thoroughly before using it.
  { "weekBasedYear-YY" : now() as String { format: "YY"} },
  { "weekBasedYear-Y" : now() as String { format: "Y"} },
  { "weekInYear-w" : now() as String {format: "w"} },
  { "weekInMonth-W" : now() as String {format: "W"} },
  { "dayOfWeekAbbreviatedName-E" : now() as String {format: "E"} },
  { "dayOfWeekFullName-EEEE" : now() as String {format: "EEEE"} },
  { "localizedDayOfWeek-eeee" : now() as String {format: "eeee"} },
  { "localizedDayOfWeek-eee" : now() as String {format: "eee"} },
  { "localizedDayOfWeek-ee" : now() as String {format: "ee"} },
  { "localizedDayOfWeek-e" : now() as String {format: "e"} },
  { "localizedDayOfWeek-cccc" : now() as String {format: "cccc"} },
  { "localizedDayOfWeek-ccc" : now() as String {format: "ccc"} },
  { "localizedDayOfWeek-c" : now() as String {format: "c"} },
  { "weekOfMonth-F" : now() as String {format: "F"} },
  { "amORpm-a" : now() as String {format: "a"} },
  // "h" outputs 12 o'clock as 12. Other hours match "K" output.
  { "hourOfDay1to12-h" : now() as String {format: "h"} },
  // "K" outputs 12 o'clock as 0. Other hours match "h" output.
  { "hourOfDay0to11-K" : now() as String {format: "K"} },
  { "clockHourOfAmPm-k" : now() as String {format: "k"} },
  { "hourOfDay0to23-H" : now() as String {format: "H"} },
  { "minuteOfHour-m" : now() as String {format: "m"} },
  { "secondOfMinute-s" : now() as String {format: "s"} },
  { "fractionOfSecond-S" : now() as String {format: "S"} },
  { "millisecondOfDay-A" : now() as String {format: "A"} },
  { "nanosecondCountOfSecond-n" : now() as String {format: "n"} },
  { "nanosecondCountOfDay-N" : now() as String {format: "N"} },
  { "timeZoneID-VV" : now() as String {format: "VV"} },
  { "timeZoneName-zz" : now() as String {format: "zz"} },
  { "localizedZoneOffset-OOOO" : now() as String {format: "OOOO"} },
  { "localizedZoneOffset-O" : now() as String {format: "O"} },
  { "timeZoneOffsetZforZero-XXX" : now() as String {format: "XXX"} },
  { "timeZoneOffsetZforZero-XX" : now() as String {format: "XX"} },
  { "timeZoneOffsetZforZero-X" : now() as String {format: "X"} },
  { "timeZoneOffset-xxx" : now() as String {format: "xxx"} },
  { "timeZoneOffset-xx" : now() as String {format: "xx"} },
  { "timeZoneOffset-x" : now() as String {format: "x"} },
  { "timeZoneOffset-Z" : now() as String {format: "Z"} },
  { "timeZoneOffset-ZZZZ" : now() as String {format: "ZZZZ"} },
  formattedDate: |2003-10-01T23:57:59| as String {format: "yyyy-MM-dd"}
 ]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
